// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VoltaPetsAPI.Data;

namespace VoltaPetsAPI.Migrations
{
    [DbContext(typeof(VoltaPetsContext))]
    [Migration("20221103060413_MigracionInicial")]
    partial class MigracionInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("VoltaPetsAPI.Models.Administrador", b =>
                {
                    b.Property<int>("CodigoAdministrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_administrador")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<int>("CodigoUsuario")
                        .HasColumnName("codigo_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("CodigoAdministrador");

                    b.HasIndex("CodigoUsuario")
                        .IsUnique();

                    b.ToTable("administrador");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Anuncio", b =>
                {
                    b.Property<int>("CodigoAnuncio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_anuncio")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoComuna")
                        .HasColumnName("codigo_comuna")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoImagen")
                        .HasColumnName("codigo_imagen")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoMascotaAnuncio")
                        .HasColumnName("codigo_mascota_anuncio")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTipoAnuncio")
                        .HasColumnName("codigo_tipo_anuncio")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTutor")
                        .HasColumnName("codigo_tutor")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("Recompensa")
                        .HasColumnName("recompensa")
                        .HasColumnType("integer");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasColumnName("responsable")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnName("telefono")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Titulo")
                        .HasColumnName("titulo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("CodigoAnuncio");

                    b.HasIndex("CodigoComuna");

                    b.HasIndex("CodigoImagen")
                        .IsUnique();

                    b.HasIndex("CodigoMascotaAnuncio")
                        .IsUnique();

                    b.HasIndex("CodigoTipoAnuncio");

                    b.HasIndex("CodigoTutor");

                    b.ToTable("anuncio");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Calificacion", b =>
                {
                    b.Property<int>("CodigoCalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_calificacion")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("Valor")
                        .HasColumnName("valor")
                        .HasColumnType("real");

                    b.HasKey("CodigoCalificacion");

                    b.ToTable("calificacion");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Comportamiento", b =>
                {
                    b.Property<int>("CodigoComportamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_comportamiento")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoPaseoMascota")
                        .HasColumnName("codigo_paseo_mascota")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoPonderacion")
                        .HasColumnName("codigo_ponderacion")
                        .HasColumnType("integer");

                    b.Property<float>("NotaAgresion")
                        .HasColumnName("nota_agresion")
                        .HasColumnType("real");

                    b.Property<float>("NotaNegativo")
                        .HasColumnName("nota_negativo")
                        .HasColumnType("real");

                    b.Property<float>("NotaObediencia")
                        .HasColumnName("nota_obediencia")
                        .HasColumnType("real");

                    b.Property<float>("NotaPositivo")
                        .HasColumnName("nota_positivo")
                        .HasColumnType("real");

                    b.HasKey("CodigoComportamiento");

                    b.HasIndex("CodigoPaseoMascota")
                        .IsUnique();

                    b.HasIndex("CodigoPonderacion");

                    b.ToTable("comportamiento");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Compromiso", b =>
                {
                    b.Property<int>("CodigoCompromiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_compromiso")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoMascota")
                        .HasColumnName("codigo_mascota")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCompromiso")
                        .HasColumnName("fecha_compromiso")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("titulo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("CodigoCompromiso");

                    b.HasIndex("CodigoMascota");

                    b.ToTable("compromiso");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Comuna", b =>
                {
                    b.Property<int>("CodigoComuna")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_comuna")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoProvincia")
                        .HasColumnName("codigo_provincia")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("text");

                    b.HasKey("CodigoComuna");

                    b.HasIndex("CodigoProvincia");

                    b.ToTable("comuna");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.EstadoMascota", b =>
                {
                    b.Property<int>("CodigoEstadoMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_estado_mascota")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("CodigoEstadoMascota");

                    b.ToTable("estado_mascota");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.EstadoPaseo", b =>
                {
                    b.Property<int>("CodigoEstadoPaseo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_estado_paseo")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.HasKey("CodigoEstadoPaseo");

                    b.ToTable("estado_paseo");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.ExperienciaPaseador", b =>
                {
                    b.Property<int>("CodigoExperiencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_experiencia")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("text");

                    b.HasKey("CodigoExperiencia");

                    b.ToTable("experiencia_paseador");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.GrupoEtario", b =>
                {
                    b.Property<int>("CodigoEtario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_etario")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EdadInferior")
                        .IsRequired()
                        .HasColumnName("edad_inferior")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EdadSuperior")
                        .IsRequired()
                        .HasColumnName("edad_superior")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("CodigoEtario");

                    b.ToTable("grupo_etario");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Imagen", b =>
                {
                    b.Property<int>("CodigoImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_imagen")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnName("path")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("url")
                        .HasColumnType("text");

                    b.HasKey("CodigoImagen");

                    b.ToTable("imagen");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Mascota", b =>
                {
                    b.Property<int>("CodigoMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_mascota")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoEstadoMascota")
                        .HasColumnName("codigo_estado_mascota")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoEtario")
                        .HasColumnName("codigo_etario")
                        .HasColumnType("integer");

                    b.Property<int?>("CodigoImagen")
                        .HasColumnName("codigo_imagen")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoRaza")
                        .HasColumnName("codigo_raza")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoSexo")
                        .HasColumnName("codigo_sexo")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTamanio")
                        .HasColumnName("codigo_tamanio")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTutor")
                        .HasColumnName("codigo_tutor")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<int>("EdadRegistro")
                        .HasColumnName("edad_registro")
                        .HasColumnType("integer");

                    b.Property<bool>("Esterilizado")
                        .HasColumnName("esterilizado")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnName("fecha_nacimiento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("CodigoMascota");

                    b.HasIndex("CodigoEstadoMascota");

                    b.HasIndex("CodigoEtario");

                    b.HasIndex("CodigoImagen")
                        .IsUnique();

                    b.HasIndex("CodigoRaza");

                    b.HasIndex("CodigoSexo");

                    b.HasIndex("CodigoTamanio");

                    b.HasIndex("CodigoTutor");

                    b.ToTable("mascota");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.MascotaAnuncio", b =>
                {
                    b.Property<int>("CodigoMascotaAnuncio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_mascota_anuncio")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoEtario")
                        .HasColumnName("codigo_etario")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoRaza")
                        .HasColumnName("codigo_raza")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoSexo")
                        .HasColumnName("codigo_sexo")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTamanio")
                        .HasColumnName("codigo_tamanio")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTipoMascota")
                        .HasColumnName("codigo_tipo_mascota")
                        .HasColumnType("integer");

                    b.Property<int?>("Edad")
                        .HasColumnName("edad")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("CodigoMascotaAnuncio");

                    b.HasIndex("CodigoEtario");

                    b.HasIndex("CodigoRaza");

                    b.HasIndex("CodigoSexo");

                    b.HasIndex("CodigoTamanio");

                    b.HasIndex("CodigoTipoMascota");

                    b.ToTable("mascota_anuncio");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.ParquePetFriendly", b =>
                {
                    b.Property<int>("CodigoParque")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_parque")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoComuna")
                        .HasColumnName("codigo_comuna")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Latitud")
                        .HasColumnName("latitud")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitud")
                        .HasColumnName("longitud")
                        .HasColumnType("double precision");

                    b.HasKey("CodigoParque");

                    b.HasIndex("CodigoComuna");

                    b.ToTable("parque_pet_friendly");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Paseador", b =>
                {
                    b.Property<int>("CodigoPaseador")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_paseador")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activado")
                        .HasColumnName("activado")
                        .HasColumnType("boolean");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<int>("CodigoExperiencia")
                        .HasColumnName("codigo_experiencia")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoUbicacion")
                        .HasColumnName("codigo_ubicacion")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoUsuario")
                        .HasColumnName("codigo_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Dv")
                        .IsRequired()
                        .HasColumnName("dv")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnName("rut")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnName("telefono")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.HasKey("CodigoPaseador");

                    b.HasIndex("CodigoExperiencia");

                    b.HasIndex("CodigoUbicacion");

                    b.HasIndex("CodigoUsuario")
                        .IsUnique();

                    b.ToTable("paseador");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Paseo", b =>
                {
                    b.Property<int>("CodigoPaseo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_paseo")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Calificado")
                        .HasColumnName("calificado")
                        .HasColumnType("boolean");

                    b.Property<int?>("CodigoCalificacion")
                        .HasColumnName("codigo_calificacion")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoEstadoPaseo")
                        .HasColumnName("codigo_estado_paseo")
                        .HasColumnType("integer");

                    b.Property<int?>("CodigoParque")
                        .HasColumnName("codigo_parque")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoPaseador")
                        .HasColumnName("codigo_paseador")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("DuracionBasico")
                        .HasColumnName("duracion_basico")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("DuracionJuego")
                        .HasColumnName("duracion_juego")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("DuracionSocial")
                        .HasColumnName("duracion_social")
                        .HasColumnType("interval");

                    b.Property<DateTime>("Fecha")
                        .HasColumnName("fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnName("hora_inicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("HoraTermino")
                        .HasColumnName("hora_termino")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("CodigoPaseo");

                    b.HasIndex("CodigoCalificacion");

                    b.HasIndex("CodigoEstadoPaseo");

                    b.HasIndex("CodigoParque");

                    b.HasIndex("CodigoPaseador");

                    b.ToTable("paseo");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.PaseoMascota", b =>
                {
                    b.Property<int>("CodigoPaseoMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_paseo_mascota")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoMascota")
                        .HasColumnName("codigo_mascota")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoPaseo")
                        .HasColumnName("codigo_paseo")
                        .HasColumnType("integer");

                    b.Property<bool>("Evaluado")
                        .HasColumnName("evaluado")
                        .HasColumnType("boolean");

                    b.HasKey("CodigoPaseoMascota");

                    b.HasIndex("CodigoMascota");

                    b.HasIndex("CodigoPaseo");

                    b.ToTable("paseo_mascota");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.PerroAceptado", b =>
                {
                    b.Property<int>("CodigoAceptado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_aceptado")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CantidadPerro")
                        .HasColumnName("cantidad_perro")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoPaseador")
                        .HasColumnName("codigo_paseador")
                        .HasColumnType("integer");

                    b.Property<bool>("TamanioGigante")
                        .HasColumnName("tamanio_gigante")
                        .HasColumnType("boolean");

                    b.Property<bool>("TamanioGrande")
                        .HasColumnName("tamanio_grande")
                        .HasColumnType("boolean");

                    b.Property<bool>("TamanioMediano")
                        .HasColumnName("tamanio_mediano")
                        .HasColumnType("boolean");

                    b.Property<bool>("TamanioPequenio")
                        .HasColumnName("tamanio_pequenio")
                        .HasColumnType("boolean");

                    b.Property<bool>("TamanioToy")
                        .HasColumnName("tamanio_toy")
                        .HasColumnType("boolean");

                    b.HasKey("CodigoAceptado");

                    b.HasIndex("CodigoPaseador")
                        .IsUnique();

                    b.ToTable("perro_aceptado");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.PerroPermitido", b =>
                {
                    b.Property<int>("CodigoPermitido")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_permitido")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoExperiencia")
                        .HasColumnName("codigo_experiencia")
                        .HasColumnType("integer");

                    b.Property<bool>("TamanioGigante")
                        .HasColumnName("tamanio_gigante")
                        .HasColumnType("boolean");

                    b.Property<bool>("TamanioGrande")
                        .HasColumnName("tamanio_grande")
                        .HasColumnType("boolean");

                    b.Property<bool>("TamanioMediano")
                        .HasColumnName("tamanio_mediano")
                        .HasColumnType("boolean");

                    b.HasKey("CodigoPermitido");

                    b.HasIndex("CodigoExperiencia")
                        .IsUnique();

                    b.ToTable("perro_permitido");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Ponderacion", b =>
                {
                    b.Property<int>("CodigoPonderacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_ponderacion")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("Agresion")
                        .HasColumnName("agresion")
                        .HasColumnType("real");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnName("fecha_registro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaTermino")
                        .HasColumnName("fecha_termino")
                        .HasColumnType("timestamp without time zone");

                    b.Property<float>("Negativo")
                        .HasColumnName("negativo")
                        .HasColumnType("real");

                    b.Property<float>("Obediencia")
                        .HasColumnName("obediencia")
                        .HasColumnType("real");

                    b.Property<float>("Positivo")
                        .HasColumnName("positivo")
                        .HasColumnType("real");

                    b.HasKey("CodigoPonderacion");

                    b.ToTable("ponderacion");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Provincia", b =>
                {
                    b.Property<int>("CodigoProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_provincia")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoRegion")
                        .HasColumnName("codigo_region")
                        .HasColumnType("integer");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("text");

                    b.HasKey("CodigoProvincia");

                    b.HasIndex("CodigoRegion");

                    b.ToTable("provincia");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.PuntajePersonalidad", b =>
                {
                    b.Property<int>("CodigoPuntaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_puntaje")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("Agresivo")
                        .HasColumnName("agresivo")
                        .HasColumnType("real");

                    b.Property<float>("Amigable")
                        .HasColumnName("amigable")
                        .HasColumnType("real");

                    b.Property<int>("CodigoPaseoMascota")
                        .HasColumnName("codigo_paseo_mascota")
                        .HasColumnType("integer");

                    b.Property<float>("Dominante")
                        .HasColumnName("dominante")
                        .HasColumnType("real");

                    b.Property<float>("Jugueton")
                        .HasColumnName("jugueton")
                        .HasColumnType("real");

                    b.Property<float>("Miedoso")
                        .HasColumnName("miedoso")
                        .HasColumnType("real");

                    b.Property<float>("Nervioso")
                        .HasColumnName("nervioso")
                        .HasColumnType("real");

                    b.Property<float>("Sociable")
                        .HasColumnName("sociable")
                        .HasColumnType("real");

                    b.Property<float>("Territorial")
                        .HasColumnName("territorial")
                        .HasColumnType("real");

                    b.Property<float>("Timido")
                        .HasColumnName("timido")
                        .HasColumnType("real");

                    b.HasKey("CodigoPuntaje");

                    b.HasIndex("CodigoPaseoMascota")
                        .IsUnique();

                    b.ToTable("puntaje_personalidad");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.RangoTarifa", b =>
                {
                    b.Property<int>("CodigoRango")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_rango")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BasicoInferior")
                        .HasColumnName("basico_inferior")
                        .HasColumnType("integer");

                    b.Property<int>("BasicoSuperior")
                        .HasColumnName("basico_superior")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoExperiencia")
                        .HasColumnName("codigo_experiencia")
                        .HasColumnType("integer");

                    b.Property<int>("JuegoInferior")
                        .HasColumnName("juego_inferior")
                        .HasColumnType("integer");

                    b.Property<int>("JuegoSuperior")
                        .HasColumnName("juego_superior")
                        .HasColumnType("integer");

                    b.Property<int>("SocialInferior")
                        .HasColumnName("social_inferior")
                        .HasColumnType("integer");

                    b.Property<int>("SocialSupeiior")
                        .HasColumnName("social_superior")
                        .HasColumnType("integer");

                    b.HasKey("CodigoRango");

                    b.HasIndex("CodigoExperiencia")
                        .IsUnique();

                    b.ToTable("rango_tarifa");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Raza", b =>
                {
                    b.Property<int>("CodigoRaza")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_raza")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Ppp")
                        .HasColumnName("ppp")
                        .HasColumnType("boolean");

                    b.HasKey("CodigoRaza");

                    b.ToTable("raza");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Recordatorio", b =>
                {
                    b.Property<int>("CodigoRecordatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_recordatorio")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoMascota")
                        .HasColumnName("codigo_mascota")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnName("fecha_publicacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("titulo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("CodigoRecordatorio");

                    b.HasIndex("CodigoMascota");

                    b.ToTable("recordatorio");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Region", b =>
                {
                    b.Property<int>("CodigoRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_region")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("CodigoRegion");

                    b.ToTable("region");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Rol", b =>
                {
                    b.Property<int>("CodigoRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_rol")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("CodigoRol");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Sexo", b =>
                {
                    b.Property<int>("CodigoSexo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_sexo")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.HasKey("CodigoSexo");

                    b.ToTable("sexo");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Tamanio", b =>
                {
                    b.Property<int>("CodigoTamanio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_tamanio")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<float>("altura")
                        .HasColumnName("altura")
                        .HasColumnType("real");

                    b.HasKey("CodigoTamanio");

                    b.ToTable("tamanio");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Tarifa", b =>
                {
                    b.Property<int>("CodigoTarifa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_tarifa")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Basico")
                        .HasColumnName("basico")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoPaseador")
                        .HasColumnName("codigo_paseador")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnName("fecha_registro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaTermino")
                        .HasColumnName("fecha_termino")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Juego")
                        .HasColumnName("juego")
                        .HasColumnType("integer");

                    b.Property<int>("Social")
                        .HasColumnName("social")
                        .HasColumnType("integer");

                    b.HasKey("CodigoTarifa");

                    b.HasIndex("CodigoPaseador");

                    b.ToTable("tarifa");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.TipoAnuncio", b =>
                {
                    b.Property<int>("CodigoTipoAnuncio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_tipo_anuncio")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.HasKey("CodigoTipoAnuncio");

                    b.ToTable("tipo_anuncio");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.TipoMascota", b =>
                {
                    b.Property<int>("CodigoTipoMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_tipo_mascota")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.HasKey("CodigoTipoMascota");

                    b.ToTable("tipo_mascota");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Tutor", b =>
                {
                    b.Property<int>("CodigoTutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_tutor")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Activado")
                        .HasColumnName("activado")
                        .HasColumnType("boolean");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<int>("CodigoUbicacion")
                        .HasColumnName("codigo_ubicacion")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoUsuario")
                        .HasColumnName("codigo_usuario")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnName("telefono")
                        .HasColumnType("character varying(11)")
                        .HasMaxLength(11);

                    b.HasKey("CodigoTutor");

                    b.HasIndex("CodigoUbicacion");

                    b.HasIndex("CodigoUsuario")
                        .IsUnique();

                    b.ToTable("tutor");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Ubicacion", b =>
                {
                    b.Property<int>("CodigoUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_ubicacion")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodigoComuna")
                        .HasColumnName("codigo_comuna")
                        .HasColumnType("integer");

                    b.Property<int?>("Departamento")
                        .HasColumnName("departamento")
                        .HasColumnType("integer");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnName("direccion")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<double>("Latitud")
                        .HasColumnName("latitud")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitud")
                        .HasColumnName("longitud")
                        .HasColumnType("double precision");

                    b.HasKey("CodigoUbicacion");

                    b.HasIndex("CodigoComuna");

                    b.ToTable("ubicacion");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Usuario", b =>
                {
                    b.Property<int>("CodigoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_usuario")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CodigoImagen")
                        .HasColumnName("codigo_imagen")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoRol")
                        .HasColumnName("codigo_rol")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("character varying(70)")
                        .HasMaxLength(70);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("token")
                        .HasColumnType("text");

                    b.HasKey("CodigoUsuario");

                    b.HasIndex("CodigoImagen")
                        .IsUnique();

                    b.HasIndex("CodigoRol");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Vacuna", b =>
                {
                    b.Property<int>("CodigoVacuna")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_vacuna")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("Obligatoria")
                        .HasColumnName("obligatoria")
                        .HasColumnType("boolean");

                    b.Property<int>("Periodo")
                        .HasColumnName("periodo")
                        .HasColumnType("integer");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasColumnName("unidad_medida")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("CodigoVacuna");

                    b.ToTable("vacuna");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.VacunaMascota", b =>
                {
                    b.Property<int>("CodigoVacunaMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("codigo_vacuna_mascota")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CodigoImagen")
                        .HasColumnName("codigo_imagen")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoMascota")
                        .HasColumnName("codigo_mascota")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoVacuna")
                        .HasColumnName("codigo_vacuna")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaVacunacion")
                        .HasColumnName("fecha_vacunacion")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("CodigoVacunaMascota");

                    b.HasIndex("CodigoImagen")
                        .IsUnique();

                    b.HasIndex("CodigoMascota");

                    b.HasIndex("CodigoVacuna");

                    b.ToTable("vacuna_mascota");
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Administrador", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Usuario", "Usuario")
                        .WithOne("Administrador")
                        .HasForeignKey("VoltaPetsAPI.Models.Administrador", "CodigoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Anuncio", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Comuna", "Comuna")
                        .WithMany("Anuncios")
                        .HasForeignKey("CodigoComuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Imagen", "Imagen")
                        .WithOne("Anuncio")
                        .HasForeignKey("VoltaPetsAPI.Models.Anuncio", "CodigoImagen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.MascotaAnuncio", "MascotaAnuncio")
                        .WithOne("Anuncio")
                        .HasForeignKey("VoltaPetsAPI.Models.Anuncio", "CodigoMascotaAnuncio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.TipoAnuncio", "TipoAnuncio")
                        .WithMany("Anuncios")
                        .HasForeignKey("CodigoTipoAnuncio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Tutor", "Tutor")
                        .WithMany("Anuncios")
                        .HasForeignKey("CodigoTutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Comportamiento", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.PaseoMascota", "PaseoMascota")
                        .WithOne("Comportamiento")
                        .HasForeignKey("VoltaPetsAPI.Models.Comportamiento", "CodigoPaseoMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Ponderacion", "Ponderacion")
                        .WithMany("Comportamientos")
                        .HasForeignKey("CodigoPonderacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Compromiso", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Mascota", "Mascota")
                        .WithMany("Compromisos")
                        .HasForeignKey("CodigoMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Comuna", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Provincia", "Provincia")
                        .WithMany("Comunas")
                        .HasForeignKey("CodigoProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Mascota", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.EstadoMascota", "EstadoMascota")
                        .WithMany("Mascotas")
                        .HasForeignKey("CodigoEstadoMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.GrupoEtario", "GrupoEtario")
                        .WithMany("Mascotas")
                        .HasForeignKey("CodigoEtario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Imagen", "Imagen")
                        .WithOne("Mascota")
                        .HasForeignKey("VoltaPetsAPI.Models.Mascota", "CodigoImagen");

                    b.HasOne("VoltaPetsAPI.Models.Raza", "Raza")
                        .WithMany("Mascotas")
                        .HasForeignKey("CodigoRaza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Sexo", "Sexo")
                        .WithMany("Mascotas")
                        .HasForeignKey("CodigoSexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Tamanio", "Tamanio")
                        .WithMany("Mascotas")
                        .HasForeignKey("CodigoTamanio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Tutor", "Tutor")
                        .WithMany("Mascotas")
                        .HasForeignKey("CodigoTutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.MascotaAnuncio", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.GrupoEtario", "GrupoEtario")
                        .WithMany("MascotaAnuncios")
                        .HasForeignKey("CodigoEtario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Raza", "Raza")
                        .WithMany("MascotaAnuncios")
                        .HasForeignKey("CodigoRaza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Sexo", "Sexo")
                        .WithMany("MascotaAnuncios")
                        .HasForeignKey("CodigoSexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Tamanio", "Tamanio")
                        .WithMany("MascotaAnuncios")
                        .HasForeignKey("CodigoTamanio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.TipoMascota", "TipoMascota")
                        .WithMany("MascotaAnuncios")
                        .HasForeignKey("CodigoTipoMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.ParquePetFriendly", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Comuna", "Comuna")
                        .WithMany()
                        .HasForeignKey("CodigoComuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Paseador", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.ExperienciaPaseador", "ExperienciaPaseador")
                        .WithMany("Paseadores")
                        .HasForeignKey("CodigoExperiencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Ubicacion", "Ubicacion")
                        .WithMany("Paseadores")
                        .HasForeignKey("CodigoUbicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Usuario", "Usuario")
                        .WithOne("Paseador")
                        .HasForeignKey("VoltaPetsAPI.Models.Paseador", "CodigoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Paseo", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Calificacion", "Calificacion")
                        .WithMany("Paseos")
                        .HasForeignKey("CodigoCalificacion");

                    b.HasOne("VoltaPetsAPI.Models.EstadoPaseo", "EstadoPaseo")
                        .WithMany("Paseos")
                        .HasForeignKey("CodigoEstadoPaseo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.ParquePetFriendly", "ParquePetFriendly")
                        .WithMany("Paseos")
                        .HasForeignKey("CodigoParque");

                    b.HasOne("VoltaPetsAPI.Models.Paseador", "Paseador")
                        .WithMany("Paseos")
                        .HasForeignKey("CodigoPaseador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.PaseoMascota", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Mascota", "Mascota")
                        .WithMany("PaseoMascotas")
                        .HasForeignKey("CodigoMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Paseo", "Paseo")
                        .WithMany("PaseoMascotas")
                        .HasForeignKey("CodigoPaseo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.PerroAceptado", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Paseador", "Paseador")
                        .WithOne("PerroAceptado")
                        .HasForeignKey("VoltaPetsAPI.Models.PerroAceptado", "CodigoPaseador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.PerroPermitido", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.ExperienciaPaseador", "ExperienciaPaseador")
                        .WithOne("PerroPermitido")
                        .HasForeignKey("VoltaPetsAPI.Models.PerroPermitido", "CodigoExperiencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Provincia", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Region", "Region")
                        .WithMany("Provincias")
                        .HasForeignKey("CodigoRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.PuntajePersonalidad", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.PaseoMascota", "PaseoMascota")
                        .WithOne("PuntajePersonalidad")
                        .HasForeignKey("VoltaPetsAPI.Models.PuntajePersonalidad", "CodigoPaseoMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.RangoTarifa", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.ExperienciaPaseador", "ExperienciaPaseador")
                        .WithOne("RangoTarifa")
                        .HasForeignKey("VoltaPetsAPI.Models.RangoTarifa", "CodigoExperiencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Recordatorio", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Mascota", "Mascota")
                        .WithMany("Recordatorios")
                        .HasForeignKey("CodigoMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Tarifa", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Paseador", "Paseador")
                        .WithMany("Tarifas")
                        .HasForeignKey("CodigoPaseador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Tutor", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Ubicacion", "Ubicacion")
                        .WithMany("Tutores")
                        .HasForeignKey("CodigoUbicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Usuario", "Usuario")
                        .WithOne("Tutor")
                        .HasForeignKey("VoltaPetsAPI.Models.Tutor", "CodigoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Ubicacion", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Comuna", "Comuna")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("CodigoComuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.Usuario", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Imagen", "Imagen")
                        .WithOne("Usuario")
                        .HasForeignKey("VoltaPetsAPI.Models.Usuario", "CodigoImagen");

                    b.HasOne("VoltaPetsAPI.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("CodigoRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VoltaPetsAPI.Models.VacunaMascota", b =>
                {
                    b.HasOne("VoltaPetsAPI.Models.Imagen", "Imagen")
                        .WithOne("VacunaMascota")
                        .HasForeignKey("VoltaPetsAPI.Models.VacunaMascota", "CodigoImagen");

                    b.HasOne("VoltaPetsAPI.Models.Mascota", "Mascota")
                        .WithMany("VacunaMascotas")
                        .HasForeignKey("CodigoMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoltaPetsAPI.Models.Vacuna", "Vacuna")
                        .WithMany("VacunaMascotas")
                        .HasForeignKey("CodigoVacuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
